{"hash":"0541820f9fd1e52596d6fd3843c8141d9ab852a0","data":{"post":{"title":"Is `this` in Javascript bad?","content":"<p>Recently I have an argument with a friend who absolutely hate the <code>this</code> keyword in Javascript. He claims that since the language has an ambiguous binding of <code>this</code> in different situations, e.g. <code>const f = obj.g</code> will lose the binding to <code>obj</code>, <code>obj.g.call(obj2)</code> will call <code>g</code> in the context of <code>obj2</code>..., the <code>this</code> keyword in Javascript is simply one of the worst thing in Javascript.</p>\n<p>He also claims that Javascript would be a lot easier to code/maintain by avoiding the use of <code>this</code> keyword. He advocates the following pattern for object creation:</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> car <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  car<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  car<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">move</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> car<span class=\"token punctuation\">.</span>position<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> car<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token function\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>I am, on the other hand, very comfortable with the <code>this</code> keyword. I use it a lot and appreciate how <code>bind</code>, <code>call</code> and <code>apply</code> works. However, I can't really find a legit argument against his pattern, because it really seem to be clearer for those who don't know much about Javascript?</p>\n<p>What do you think? Give me some insights!</p>\n"}},"context":{}}